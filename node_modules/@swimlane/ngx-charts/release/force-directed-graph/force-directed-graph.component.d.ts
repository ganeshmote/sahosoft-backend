import { ElementRef, TemplateRef, EventEmitter } from '@angular/core';
import { BaseChartComponent } from '../common/base-chart.component';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import * as ɵngcc0 from '@angular/core';
export declare class ForceDirectedGraphComponent extends BaseChartComponent {
    force: any;
    forceLink: any;
    legend: boolean;
    legendTitle: string;
    legendPosition: string;
    nodes: any[];
    links: Array<{
        source: any;
        target: any;
    }>;
    activeEntries: any[];
    tooltipDisabled: boolean;
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    linkTemplate: TemplateRef<any>;
    nodeTemplate: TemplateRef<any>;
    tooltipTemplate: TemplateRef<any>;
    chart: ElementRef;
    colors: ColorHelper;
    dims: ViewDimensions;
    draggingNode: any;
    draggingStart: {
        x: number;
        y: number;
    };
    margin: number[];
    results: any[];
    seriesDomain: any;
    transform: string;
    legendOptions: any;
    groupResultsBy: (node: any) => string;
    update(): void;
    onClick(data: any): void;
    onActivate(event: any): void;
    onDeactivate(event: any): void;
    getSeriesDomain(): any[];
    trackLinkBy(index: any, link: any): any;
    trackNodeBy(index: any, node: any): any;
    setColors(): void;
    getLegendOptions(): {
        scaleType: string;
        domain: any;
        colors: ColorHelper;
        title: string;
        position: string;
    };
    onDragStart(node: any, $event: MouseEvent): void;
    onDrag($event: MouseEvent): void;
    onDragEnd($event: MouseEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ForceDirectedGraphComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ForceDirectedGraphComponent, "ngx-charts-force-directed-graph", never, { "activeEntries": "activeEntries"; "force": "force"; "forceLink": "forceLink"; "legend": "legend"; "legendTitle": "legendTitle"; "legendPosition": "legendPosition"; "nodes": "nodes"; "links": "links"; "tooltipDisabled": "tooltipDisabled"; "groupResultsBy": "groupResultsBy"; }, { "activate": "activate"; "deactivate": "deactivate"; }, ["linkTemplate", "nodeTemplate", "tooltipTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9yY2UtZGlyZWN0ZWQtZ3JhcGguY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImZvcmNlLWRpcmVjdGVkLWdyYXBoLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgVGVtcGxhdGVSZWYsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBCYXNlQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuLi9jb21tb24vYmFzZS1jaGFydC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBWaWV3RGltZW5zaW9ucyB9IGZyb20gJy4uL2NvbW1vbi92aWV3LWRpbWVuc2lvbnMuaGVscGVyJztcclxuaW1wb3J0IHsgQ29sb3JIZWxwZXIgfSBmcm9tICcuLi9jb21tb24vY29sb3IuaGVscGVyJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRm9yY2VEaXJlY3RlZEdyYXBoQ29tcG9uZW50IGV4dGVuZHMgQmFzZUNoYXJ0Q29tcG9uZW50IHtcclxuICAgIGZvcmNlOiBhbnk7XHJcbiAgICBmb3JjZUxpbms6IGFueTtcclxuICAgIGxlZ2VuZDogYm9vbGVhbjtcclxuICAgIGxlZ2VuZFRpdGxlOiBzdHJpbmc7XHJcbiAgICBsZWdlbmRQb3NpdGlvbjogc3RyaW5nO1xyXG4gICAgbm9kZXM6IGFueVtdO1xyXG4gICAgbGlua3M6IEFycmF5PHtcclxuICAgICAgICBzb3VyY2U6IGFueTtcclxuICAgICAgICB0YXJnZXQ6IGFueTtcclxuICAgIH0+O1xyXG4gICAgYWN0aXZlRW50cmllczogYW55W107XHJcbiAgICB0b29sdGlwRGlzYWJsZWQ6IGJvb2xlYW47XHJcbiAgICBhY3RpdmF0ZTogRXZlbnRFbWl0dGVyPGFueT47XHJcbiAgICBkZWFjdGl2YXRlOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIGxpbmtUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcclxuICAgIG5vZGVUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcclxuICAgIHRvb2x0aXBUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcclxuICAgIGNoYXJ0OiBFbGVtZW50UmVmO1xyXG4gICAgY29sb3JzOiBDb2xvckhlbHBlcjtcclxuICAgIGRpbXM6IFZpZXdEaW1lbnNpb25zO1xyXG4gICAgZHJhZ2dpbmdOb2RlOiBhbnk7XHJcbiAgICBkcmFnZ2luZ1N0YXJ0OiB7XHJcbiAgICAgICAgeDogbnVtYmVyO1xyXG4gICAgICAgIHk6IG51bWJlcjtcclxuICAgIH07XHJcbiAgICBtYXJnaW46IG51bWJlcltdO1xyXG4gICAgcmVzdWx0czogYW55W107XHJcbiAgICBzZXJpZXNEb21haW46IGFueTtcclxuICAgIHRyYW5zZm9ybTogc3RyaW5nO1xyXG4gICAgbGVnZW5kT3B0aW9uczogYW55O1xyXG4gICAgZ3JvdXBSZXN1bHRzQnk6IChub2RlOiBhbnkpID0+IHN0cmluZztcclxuICAgIHVwZGF0ZSgpOiB2b2lkO1xyXG4gICAgb25DbGljayhkYXRhOiBhbnkpOiB2b2lkO1xyXG4gICAgb25BY3RpdmF0ZShldmVudDogYW55KTogdm9pZDtcclxuICAgIG9uRGVhY3RpdmF0ZShldmVudDogYW55KTogdm9pZDtcclxuICAgIGdldFNlcmllc0RvbWFpbigpOiBhbnlbXTtcclxuICAgIHRyYWNrTGlua0J5KGluZGV4OiBhbnksIGxpbms6IGFueSk6IGFueTtcclxuICAgIHRyYWNrTm9kZUJ5KGluZGV4OiBhbnksIG5vZGU6IGFueSk6IGFueTtcclxuICAgIHNldENvbG9ycygpOiB2b2lkO1xyXG4gICAgZ2V0TGVnZW5kT3B0aW9ucygpOiB7XHJcbiAgICAgICAgc2NhbGVUeXBlOiBzdHJpbmc7XHJcbiAgICAgICAgZG9tYWluOiBhbnk7XHJcbiAgICAgICAgY29sb3JzOiBDb2xvckhlbHBlcjtcclxuICAgICAgICB0aXRsZTogc3RyaW5nO1xyXG4gICAgICAgIHBvc2l0aW9uOiBzdHJpbmc7XHJcbiAgICB9O1xyXG4gICAgb25EcmFnU3RhcnQobm9kZTogYW55LCAkZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xyXG4gICAgb25EcmFnKCRldmVudDogTW91c2VFdmVudCk6IHZvaWQ7XHJcbiAgICBvbkRyYWdFbmQoJGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZDtcclxufVxyXG4iXX0=